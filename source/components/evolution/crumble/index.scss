
//------------------------------------------------------------------------------
//                       Crumble config
//------------------------------------------------------------------------------



$c-crumble-name: 'crumble';
$c-crumble-event-name: 'event';

$c-crumble-font-weight: 300;

$c-crumble-span-min-height: 50px;
$c-crumble-header-height: 60px;
$c-crumble-body-height: 60px;


$c-crumble-tag-width: 60px;

$c-crumble-unfold-duration: .7s;


//------------------------------------------------
//              Media Queries
//------------------------------------------------

$c-crumble-media-tablet: 768px;
$c-crumble-media-desktop: 1024px;
$c-crumble-media-desktop-HD: 1200px;



//------------------------------------------------------------------------------
//                          Crumble Placeholders
//------------------------------------------------------------------------------


%c-crumble-unfold-transition {
  transition: transform $c-crumble-unfold-duration cubic-bezier(0.22, 0.61, 0.36, 1);
}

%c-crumble-pointer {
  cursor: pointer;
}

%c-crumble-rotate-to-initial {
  transform: rotateX(0)!important;
}

/******************************************************************************
                              Crumble component
******************************************************************************/


@include component( $c-crumble-name ) {

  @include vertical-rhythm(14px);
  font-family: $g-framework-font-family;
  font-weight: $c-crumble-font-weight;

  @media screen and (min-height: $c-crumble-media-tablet) {
    @include vertical-rhythm(1rem);
  }

  //----------------------------------------------------------------------------
  //                      EVENT DETAILS - Full Width
  //----------------------------------------------------------------------------

  @include modifier('full-width') {

    $reference-crumble-item: get-bem-selector('item');

    // Item element
    & .#{$reference-crumble-item} {
      display: block;
    }
  }

  //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  //                             LIST ELEMENT
  //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  @include element( 'list' ) {

    $list-item: get-bem-selector('item');

    position: relative;
    bottom: 10px;
    margin: 0;
    padding: 0;
    list-style-type: none;

    @include modifier('actions') {
      display: flex;
      justify-content: center;
    }

    //--------------------------------------------------------------------------
    //                       Space-around HELPER
    //--------------------------------------------------------------------------

    @include helper('space-around') {
      justify-content: space-around;
      width: 60%;
      margin: 0 auto;
    }


    //--------------------------------------------------------------------------
    //                   COLOR MODIFIER - ITEM ELEMENT
    //--------------------------------------------------------------------------

    @include modifier('secondary') {

      .#{$list-item} {
        background-color: get-color('secondary', 'dark');

        &:hover {
          background-color: get-color('secondary', $opacity: .9);
        }
      }
    }

    @include modifier('accent3') {

      .#{$list-item} {
        background-color: get-color('accent3');

        &:hover {
          background-color: tint(get-color('accent3'), 9%);
        }
      }
    }

    @include modifier('accent4') {

      .#{$list-item} {
        background-color: get-color('accent4', 'dark');

        &:hover {
          background-color: get-color('accent4');
        }
      }
    }

    @include modifier('background') {

      .#{$list-item} {

        background-color: get-color('background');

        &:hover {
          background-color: get-color('background', $opacity: .9);
        }
      }
    }

  }

  //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  //                             ITEM ELEMENT
  //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  @include element('item') {

    $expand-icon: get-bem-selector('icon', 'expand');

    position: relative;
    align-items: center;
    background-color: $g-color-primary-as-background;
    border: 1px solid rgb(206, 206, 206);

      @media screen and (min-width: 375px) {
        display: flex;
      }

      &:hover {
        background-color: get-color('primary', $opacity: .9);
      }

      &:hover .#{$expand-icon} {
        background-color: white(0.10);
      }

      //--------------------------------------------------------------------------
      //                   COLOR MODIFIER - ITEM ELEMENT
      //--------------------------------------------------------------------------

      @include modifier('secondary') {
        background-color: get-color('secondary', 'dark')!important;

        &:hover {
          background-color: get-color('secondary', $opacity: .9)!important;
        }
      }

      @include modifier('accent3') {
        background-color: get-color('accent3')!important;

        &:hover {
          background-color: tint(get-color('accent3'), 9%)!important;
        }
      }

      @include modifier('accent4') {
        background-color: get-color('accent4', 'dark')!important;

        &:hover {
          background-color: get-color('accent4')!important;
        }
      }

      @include modifier('background') {
        background-color: get-color('background')!important;

        &:hover {
          background-color: get-color('background', $opacity: .9)!important;
        }
      }
  }

  //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  //                             TAG ELEMENT
  //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  @include element('tag') {
    position: absolute;
    left: 0;
    top: 0;
    display: flex;
    height: 100%;
    width: $c-crumble-tag-width;
    color: black(.7);
    background-color: rgb(196, 196, 179);
    align-items: center;
    justify-content: center;
    flex-direction: column;

      @media screen and (min-width: 450px) {
        left: 10px;
      }

      &:after {
        content: attr(data-tag);
        text-transform: uppercase;
        font-size: .8em;
      };
  }

  //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  //                             SPAN ELEMENT
  //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  @include element('span') {
    margin-left: #{$c-crumble-tag-width};
    width: calc(100% - #{$c-crumble-tag-width});
    min-height: $c-crumble-span-min-height;
    display: flex;
    align-items: center;
    color: white();
    text-shadow: 0 1px 1px rgba(0,0,0,.5);

    @media screen and (min-width: 480px) {
      margin-left: #{$c-crumble-tag-width + 20px};
    }

    @include state('active') {
      min-height: 0;
      height: 0;
      width: 0;
      overflow: hidden;
    }
  }

  //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  //                             ICON ELEMENT
  //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  @include element('icon') {
    @extend %c-crumble-pointer;
    padding: 10px;
    color: white(0.69);
    background-color: get-color('secondary', 'light');

      &:hover {
        background-color: get-color('secondary');
        color: white(1);
      }

      // crumble__icon--close
      @include modifier('close') {
        @extend %c-crumble-pointer;
        position: absolute;
        right: 5px;
        top: 5px;
        color: white(.6);
        transition: transform .7s cubic-bezier(0.39, 0.58, 0.57, 1);

          &:hover {
            color: white();
            transform: rotate(360deg);
          }
      }

      // crumble__icon--expand
      @include modifier('expand') {
        @extend %c-crumble-pointer;
        padding: 10px;
        margin: 0 10px;
        background-color: white(.05);
      }
  }

}


//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//
//                             EVENT COMPONENT
//
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

@include component($c-crumble-event-name) {
  min-height: 0;
  height: 0;
  flex-basis: 0;
  background-color: rgb(0, 0, 0);
  overflow: hidden;
  transition: min-height 1s cubic-bezier(0, 1.02, 0, 1);
  perspective: 40px;
  cursor: initial;

  // Status
  @include state('open') {

    $event-description: get-bem-selector('description');

    min-height: $c-crumble-header-height + $c-crumble-body-height;
    height: auto;
    width: 100%;
    flex-basis: initial;
    overflow: initial;

      .#{$event-description} {
        opacity: 1;
        max-height: 10000px;
      }
  }

  // event__title
  @include element('title') {
    margin: 0;
    color: white();
    font-weight: 400;
    text-transform: uppercase;
    letter-spacing: .3rem;
  }

  // event__header
  @include element('header') {
    @extend %c-crumble-unfold-transition;

    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    height: $c-crumble-header-height + 20px;
    text-align: center;
    background-color: get-color('background', 'light');
    transform: rotateX(-10deg);
    transform-origin: 50% 0;
    transform-style: preserve-3d;

    @media screen and (min-width: ) {
      height: $c-crumble-header-height;
    }

    @include state('rotated-to-zero') {
      @extend %c-crumble-rotate-to-initial;
    }
  }

  //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  //                          EVENT's BODY ELEMENT
  //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  @include element('body') {
    @extend %c-crumble-unfold-transition;
    height: $c-crumble-body-height;
    background-color: #6f6f6f;
    text-align: center;
    transform: rotateX(10deg);
    transform-origin: 50% 100%;
    transform-style: preserve-3d;
    overflow: visible;

    @include state('rotated-to-zero') {
      @extend %c-crumble-rotate-to-initial;
    }
  }

  //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  //                          EVENT's DESCRIPTION ELEMENT
  //~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  @include element('description') {
    @include size(x-small);
    max-height: 0;
    opacity: 0;
    padding: 5px;
    color: white(.8);
    line-height: $g-vertical-rhythm * 1.5;
    overflow: hidden;
    transition: max-height 3.5s #{$c-crumble-unfold-duration - .3s} ease-in,
                opacity .7s #{$c-crumble-unfold-duration - .3s} ease-in;

      * {
        color: white();
      }

      p {
        margin-bottom: $g-vertical-rhythm;
      }

      h1, h2, h3, h4, h5, h6 {
        margin: $g-heading-margin;
      }

      h1 {
        @include size(h1);
      }

      h2 {
        @include size(h2);
      }

      h3 {
        @include size(h3);
      }

      h4 {
        @include size(h4);
      }

      @media screen and (min-width: $c-crumble-media-tablet) {
        padding: 15px;
      }
  }
}
